/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Armored Interactive (https://sketchfab.com/ychiang6)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/ssrbs-hololive-711119ac97474d0d851c6f0a2922821b
title: SSRBs_Hololive
*/

import { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

function LoadingCats(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/loading-cats/scene.gltf');
  const { actions } = useAnimations(animations, group);

  // useFrame(() => {
  //   console.log({ actions });
  //   actions['Idle'].play();
  // });

  return (
    <group ref={group} {...props} dispose={null}>
      <primitive object={nodes._rootJoint} />
      <group position={[0, 16.97, -0.03]} rotation={[-1.57, -Math.PI / 2, 0]}>
        <group position={[-3.28, -0.01, 0]} rotation={[0, 0, 0]}>
          <group
            position={[9.99, -2.26, 8.61]}
            rotation={[-3.14, 0.47, -2.76]}
          />
          <group
            position={[9.99, -2.26, -8.61]}
            rotation={[3.14, -0.47, 0.38]}
          />
          <group
            position={[-10.77, -5.38, 6.1]}
            rotation={[-1.57, -0.04, -0.02]}
          />
          <group
            position={[-10.77, -5.38, -6.1]}
            rotation={[1.57, 0.01, 3.12]}
          />
          <group position={[14.24, 0.01, 0]} rotation={[1.57, 0, 0.01]}>
            <group rotation={[0, 0, 0.43]}>
              <group position={[4.77, -0.03, 0.01]} rotation={[0, 0, -0.02]}>
                <group position={[0, 0, 0]} rotation={[0, 0, Math.PI / 3]}>
                  <group position={[4.61, 0, -0.02]} rotation={[0, 0, 0.01]}>
                    <group position={[0, 0, 0]} rotation={[0, 0, 0.47]}>
                      <group position={[2.43, 0, 0]} rotation={[0, 0, -0.01]} />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
      <group position={[0, 11.6, -5.25]} rotation={[-1.57, -Math.PI / 2, 0]}>
        <group rotation={[0, 0, 0]}>
          <group
            position={[-8.52, -0.03, -6.71]}
            rotation={[1.57, 0.01, 3.14]}
          />
          <group position={[-8.52, -0.03, 6.71]} rotation={[-1.57, -0.01, 0]} />
          <group position={[-2.82, 8.66, 0]} rotation={[-3.14, 0, -1.57]}>
            <group rotation={[-0.03, -0.31, -0.1]}>
              <group position={[5.4, 0, 0.01]} rotation={[0, 0, 0]}>
                <group rotation={[-0.03, -0.31, -0.1]}>
                  <group position={[5.19, 0, -0.01]} rotation={[0, 0, 0]}>
                    <group rotation={[-0.03, -0.31, -0.1]}>
                      <group position={[4.45, 0, -0.05]} rotation={[0, 0, 0]} />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
      <skinnedMesh
        geometry={nodes.Object_8.geometry}
        material={nodes.Object_8.material}
        skeleton={nodes.Object_8.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_9.geometry}
        material={nodes.Object_9.material}
        skeleton={nodes.Object_9.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_10.geometry}
        material={nodes.Object_10.material}
        skeleton={nodes.Object_10.skeleton}
      />
      <primitive object={nodes._rootJoint_1} />
      <group position={[-32.53, 0, 0]}>
        <group position={[0, 16.97, -0.03]} rotation={[-1.57, -Math.PI / 2, 0]}>
          <group position={[-3.28, -0.01, 0]} rotation={[0, 0, 0]}>
            <group
              position={[9.99, -2.26, 8.61]}
              rotation={[-3.14, 0.47, -2.76]}
            />
            <group
              position={[9.99, -2.26, -8.61]}
              rotation={[3.14, -0.47, 0.38]}
            />
            <group
              position={[-10.77, -5.38, 6.1]}
              rotation={[-1.57, -0.04, -0.02]}
            />
            <group
              position={[-10.77, -5.38, -6.1]}
              rotation={[1.57, 0.01, 3.12]}
            />
            <group position={[14.24, 0.01, 0]} rotation={[1.57, 0, 0.01]}>
              <group rotation={[0, 0, 0.43]}>
                <group position={[4.77, -0.03, 0.01]} rotation={[0, 0, -0.02]}>
                  <group position={[0, 0, 0]} rotation={[0, 0, Math.PI / 3]}>
                    <group position={[4.61, 0, -0.02]} rotation={[0, 0, 0.01]}>
                      <group position={[0, 0, 0]} rotation={[0, 0, 0.47]}>
                        <group
                          position={[2.43, 0, 0]}
                          rotation={[0, 0, -0.01]}
                        />
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
        <group position={[0, 11.6, -5.25]} rotation={[-1.57, -Math.PI / 2, 0]}>
          <group rotation={[0, 0, 0]}>
            <group
              position={[-8.52, -0.03, -6.71]}
              rotation={[1.57, 0.01, 3.14]}
            />
            <group
              position={[-8.52, -0.03, 6.71]}
              rotation={[-1.57, -0.01, 0]}
            />
            <group position={[-2.82, 8.66, 0]} rotation={[-3.14, 0, -1.57]}>
              <group rotation={[-0.35, 0.08, 0.53]}>
                <group position={[5.4, 0, 0.01]} rotation={[0, 0, 0]}>
                  <group rotation={[-0.34, 0.27, 0.57]}>
                    <group position={[5.19, 0, -0.01]} rotation={[0, 0, 0]}>
                      <group rotation={[-0.24, 0.41, 0.55]}>
                        <group
                          position={[4.45, 0, -0.05]}
                          rotation={[0, 0, 0]}
                        />
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
      <skinnedMesh
        geometry={nodes.Object_75.geometry}
        material={materials.ColorScheme_4}
        skeleton={nodes.Object_75.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_76.geometry}
        material={nodes.Object_76.material}
        skeleton={nodes.Object_76.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_77.geometry}
        material={nodes.Object_77.material}
        skeleton={nodes.Object_77.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_78.geometry}
        material={nodes.Object_78.material}
        skeleton={nodes.Object_78.skeleton}
      />
      <group name="All_ctrl" position={[32.05, 0, 0]}>
        <group position={[0, 16.97, -0.03]} rotation={[-1.57, -Math.PI / 2, 0]}>
          <group position={[-3.28, -0.01, 0]} rotation={[0, 0, 0]}>
            <group
              position={[9.99, -2.26, 8.61]}
              rotation={[-3.14, 0.47, -2.76]}
            />
            <group
              position={[9.99, -2.26, -8.61]}
              rotation={[3.14, -0.47, 0.38]}
            />
            <group
              position={[-10.77, -5.38, 6.1]}
              rotation={[-1.57, -0.04, -0.02]}
            />
            <group
              position={[-10.77, -5.38, -6.1]}
              rotation={[1.57, 0.01, 3.12]}
            />
            <group position={[14.24, 0.01, 0]} rotation={[1.57, 0, 0.01]}>
              <group rotation={[0, 0, 0.41]}>
                <group position={[4.77, -0.03, 0.01]} rotation={[0, 0, -0.02]}>
                  <group position={[0, 0, 0]} rotation={[0, 0, 0.99]}>
                    <group position={[4.61, 0, -0.02]} rotation={[0, 0, 0.01]}>
                      <group rotation={[0, 0, 0.62]}>
                        <group
                          position={[2.43, 0, 0]}
                          rotation={[0, 0, -0.01]}
                        />
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
        <group position={[0, 11.6, -5.25]} rotation={[-1.57, -Math.PI / 2, 0]}>
          <group rotation={[0, 0, 0]}>
            <group
              position={[-8.52, -0.03, -6.71]}
              rotation={[1.57, 0.01, 3.14]}
            />
            <group
              position={[-8.52, -0.03, 6.71]}
              rotation={[-1.57, -0.01, 0]}
            />
            <group position={[-2.82, 8.66, 0]} rotation={[-3.14, 0, -1.57]}>
              <group rotation={[0, 0, 0.44]}>
                <group position={[5.4, 0, 0.01]} rotation={[0, 0, 0]}>
                  <group rotation={[0, 0, 0.44]}>
                    <group position={[5.19, 0, -0.01]} rotation={[0, 0, 0]}>
                      <group rotation={[0, 0, 0.44]}>
                        <group
                          position={[4.45, 0, -0.05]}
                          rotation={[0, 0, 0]}
                        />
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
      <primitive object={nodes._rootJoint_2} />
      <skinnedMesh
        geometry={nodes.Object_142.geometry}
        material={materials.ColorScheme_2}
        skeleton={nodes.Object_142.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_143.geometry}
        material={nodes.Object_143.material}
        skeleton={nodes.Object_143.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_144.geometry}
        material={nodes.Object_144.material}
        skeleton={nodes.Object_144.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Object_145.geometry}
        material={nodes.Object_145.material}
        skeleton={nodes.Object_145.skeleton}
      />
    </group>
  );
}

useGLTF.preload('/loading-cats/scene.gltf');

const LoadingCatsModel = (props = {}) => {
  const meshRef = useRef();

  return (
    <>
      <mesh ref={meshRef} castShadow {...props}>
        <LoadingCats />
      </mesh>
    </>
  );
};

export default LoadingCatsModel;
