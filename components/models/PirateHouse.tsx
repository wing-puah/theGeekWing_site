/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: YanoClaeys (https://sketchfab.com/yanoclaeys)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/pirate-island-cargo-bay-a45eb7d3f0c9475cb696b2a8fdfe4c1e
title: Pirate Island - Cargo Bay
*/

import { useRef, useState } from 'react';
import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

import { CameraState } from 'components/home/config';
import { font, scale } from './utils';

function PirateHouse(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/pirate_island/scene.gltf');

  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0.38]} scale={[1.05, 1, 0.69]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.island_Island_0.geometry}
            material={nodes.island_Island_0.material}
          />
        </group>
      </group>
      <group rotation={[-Math.PI / 2, 0, 0.38]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.Building001_Building_0.geometry}
            material={nodes.Building001_Building_0.material}
          />
          <mesh
            geometry={nodes.Building001_Building_0_1.geometry}
            material={nodes.Building001_Building_0_1.material}
          />
        </group>
      </group>
      <group rotation={[-Math.PI / 2, 0, 0.38]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.sky_Sky_Material_0.geometry}
            material={materials.Sky_Material}
          />
        </group>
      </group>
      <group rotation={[-Math.PI / 2, 0, 0.38]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.Sea_Sea_Material_0.geometry}
            material={materials.Sea_Material}
          />
        </group>
      </group>
      <group rotation={[-Math.PI / 2, 0, 0.38]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.Opacity_Island_0.geometry}
            material={nodes.Opacity_Island_0.material}
          />
          <mesh
            geometry={nodes.Opacity_IslandOpacity_0.geometry}
            material={materials.IslandOpacity}
          />
        </group>
      </group>
      <group rotation={[-Math.PI / 2, 0, 0.38]}>
        <group position={[-85.31, 817.61, 798.61]}>
          <mesh
            geometry={nodes.Metal_Metal_0.geometry}
            material={materials.Metal}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/pirate_island/scene.gltf');

const textConfig = {
  font,
  size: 200,
  height: 20,
};

const PirateHouseModel = (props = {}) => {
  const meshRef = useRef();
  const textMeshRef = useRef();

  const [loadText, setLoadText] = useState(false);

  useFrame((state) => {
    if (loadText && textMeshRef.current && textMeshRef.current.scale.x !== 1) {
      scale(textMeshRef.current);
    }

    if (
      !loadText &&
      state.camera.position.getComponent(2) > CameraState.to[2] - 4
    ) {
      setLoadText(true);
    }
  });

  return (
    <>
      <mesh ref={meshRef} {...props}>
        <group>
          <mesh position={[0, 100, 900]} scale={[0, 0, 0]} ref={textMeshRef}>
            <textGeometry attach="geometry" args={['Credits', textConfig]} />
            <meshLambertMaterial
              attach="material"
              side={THREE.DoubleSide}
              color={0xba0000}
            />
          </mesh>
          <PirateHouse />
        </group>
      </mesh>
    </>
  );
};

export default PirateHouseModel;
